/* styles/main.css - Modern Design System (Vodafone-Inspired) */

/* === Root Variables === */
:root {
    /* Modern Primary Palette */
    --primary-color: #E60000;
    --primary-color-hover: #FF1A1A;
    --primary-color-dark: #B30000;
    --primary-color-light: rgba(230, 0, 0, 0.12);
    --primary-color-lighter: rgba(230, 0, 0, 0.06);
    --primary-gradient: linear-gradient(135deg, #E60000 0%, #FF3333 100%);
    
    /* Modern Secondary Palette */
    --secondary-color: #1A1F36;
    --secondary-color-hover: #0F1320;
    --secondary-color-light: rgba(26, 31, 54, 0.08);
    
    /* Modern Accent Colors */
    --accent-purple: #9C2AA0;
    --accent-purple-light: rgba(156, 42, 160, 0.12);
    --accent-purple-gradient: linear-gradient(135deg, #9C2AA0 0%, #B547BA 100%);
    --accent-cyan: #00D4FF;
    --accent-cyan-light: rgba(0, 212, 255, 0.12);
    --accent-pink: #FF0080;
    --accent-pink-light: rgba(255, 0, 128, 0.12);
    
    /* Modern Status Colors */
    --success-color: #00D68F;
    --success-color-hover: #00B074;
    --success-color-light: rgba(0, 214, 143, 0.12);
    
    --danger-color: #FF3B5C;
    --danger-color-hover: #E6244A;
    --danger-color-light: rgba(255, 59, 92, 0.12);
    
    --warning-color: #FFB800;
    --warning-color-hover: #E6A500;
    --warning-color-light: rgba(255, 184, 0, 0.12);
    
    --info-color: #0095FF;
    --info-color-hover: #0080E6;
    --info-color-light: rgba(0, 149, 255, 0.12);
    
    /* Modern Neutral Colors */
    --background-color: #FAFBFC;
    --background-color-alt: #F5F7FA;
    --panel-background: #FFFFFF;
    --panel-background-hover: #FCFCFC;
    --canvas-area-background: linear-gradient(180deg, #F8F9FB 0%, #F0F2F5 100%);
    
    --border-color: #E5E8ED;
    --border-color-light: #F2F4F7;
    --border-color-dark: #D1D5DB;
    
    --text-color-primary: #0D0D0D;
    --text-color-secondary: #5F6B7A;
    --text-color-muted: #9CA3AF;
    --text-color-light: #D1D5DB;
    
    /* Modern Typography */
    --font-family-sans: -apple-system, BlinkMacSystemFont, "Inter", "Segoe UI", Roboto, Arial, sans-serif;
    --font-family-mono: "SF Mono", "Cascadia Code", "Courier New", monospace;
    
    /* Spacing */
    --spacing-xs: 4px;
    --spacing-sm: 8px;
    --spacing-md: 16px;
    --spacing-lg: 24px;
    --spacing-xl: 32px;
    --spacing-2xl: 48px;
    
    /* Modern Border Radius */
    --radius-sm: 8px;
    --radius-md: 12px;
    --radius-lg: 16px;
    --radius-xl: 24px;
    --radius-full: 9999px;
    
    /* Modern Shadows */
    --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.06);
    --shadow-md: 0 4px 16px rgba(0, 0, 0, 0.08);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.10);
    --shadow-xl: 0 16px 48px rgba(0, 0, 0, 0.12);
    --shadow-glow: 0 0 32px rgba(230, 0, 0, 0.15);
    --shadow-focus: 0 0 0 3px var(--primary-color-light), 0 0 12px var(--primary-color-light);
    --shadow-card: 0 2px 8px rgba(0, 0, 0, 0.04), 0 8px 24px rgba(0, 0, 0, 0.06);
    --shadow-panel: 0 0 1px rgba(0, 0, 0, 0.06), 0 4px 24px rgba(0, 0, 0, 0.04);
    
    /* Transitions */
    --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-base: 200ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-slow: 300ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: 500ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* === Global Styles === */
* {
    box-sizing: border-box;
}

body {
    display: flex;
    height: 100vh;
    margin: 0;
    padding: 0;
    font-family: var(--font-family-sans);
    background: linear-gradient(135deg, var(--background-color) 0%, var(--background-color-alt) 100%);
    color: var(--text-color-primary);
    font-size: 15px;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    position: relative;
    overflow: hidden;
}

body::before {
    content: '';
    position: fixed;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle at center, var(--primary-color-lighter) 0%, transparent 70%);
    opacity: 0.05;
    animation: rotate 60s linear infinite;
    pointer-events: none;
}

@keyframes rotate {
    to { transform: rotate(360deg); }
}

/* === Scrollbar Styling === */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: var(--border-color-light);
    border-radius: var(--radius-full);
}

::-webkit-scrollbar-thumb {
    background: var(--border-color);
    border-radius: var(--radius-full);
    transition: background var(--transition-fast);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--secondary-color);
}

/* === Panel Styles === */
#leftPanel, #rightPanel {
    flex: 0 0 340px;
    padding: var(--spacing-xl);
    background: var(--panel-background);
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
    box-shadow: var(--shadow-panel);
    backdrop-filter: blur(10px);
    z-index: 10;
    position: relative;
}

#leftPanel {
    border-right: 1px solid rgba(0, 0, 0, 0.05);
    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.04);
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.98) 0%, rgba(255, 255, 255, 0.95) 100%);
}

#rightPanel {
    border-left: 1px solid rgba(0, 0, 0, 0.05);
    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.04);
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.98) 0%, rgba(255, 255, 255, 0.95) 100%);
}

/* === Canvas Area === */
#canvasWrapper {
    flex-grow: 1;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: var(--spacing-2xl);
    background: var(--canvas-area-background);
    overflow: hidden;
    min-height: 0;
}

#canvasWrapper::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
        radial-gradient(ellipse at 20% 30%, rgba(230, 0, 0, 0.06) 0%, transparent 40%),
        radial-gradient(ellipse at 80% 70%, rgba(0, 212, 255, 0.04) 0%, transparent 40%),
        radial-gradient(ellipse at 50% 50%, rgba(255, 255, 255, 0.3) 0%, transparent 60%);
    opacity: 0.8;
    pointer-events: none;
    z-index: 0;
}

#canvasWrapper::after {
    content: '';
    position: absolute;
    bottom: 30px;
    right: 30px;
    width: 120px;
    height: 120px;
    background-image: 
        radial-gradient(circle at center, transparent 45%, rgba(230, 0, 0, 0.1) 45%, rgba(230, 0, 0, 0.1) 48%, transparent 48%),
        radial-gradient(circle at center, transparent 35%, rgba(230, 0, 0, 0.08) 35%, rgba(230, 0, 0, 0.08) 38%, transparent 38%);
    opacity: 0.3;
    pointer-events: none;
    z-index: 0;
    animation: pulse 4s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 0.3; }
    50% { transform: scale(1.05); opacity: 0.5; }
}

#idCanvas {
    border: 1px solid rgba(255, 255, 255, 0.8);
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: var(--shadow-card);
    border-radius: var(--radius-lg);
    transition: all var(--transition-base);
    position: relative;
    z-index: 2;
    backdrop-filter: blur(20px);
}

#idCanvas:hover {
    box-shadow: var(--shadow-xl);
    border-color: var(--primary-color-light);
    transform: translateY(-2px);
}

#idCanvas.empty-canvas {
    border: 2px dashed var(--border-color);
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
}

/* === Typography === */
h3, h4 {
    margin: 0;
    color: var(--text-color-primary);
    font-weight: 900;
    letter-spacing: -0.02em;
}

h3 {
    font-size: 22px;
    padding-bottom: var(--spacing-md);
    margin-bottom: 0;
    border-bottom: 1px solid var(--border-color-light);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    position: relative;
}

h3::before {
    content: '';
    width: 4px;
    height: 24px;
    background: var(--primary-gradient);
    border-radius: var(--radius-sm);
}

h3::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 60px;
    height: 2px;
    background: var(--primary-gradient);
    border-radius: var(--radius-full);
}

h4 {
    font-size: 14px;
    color: var(--text-color-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 600;
    margin-bottom: var(--spacing-sm);
    opacity: 0.8;
}

/* === Form Elements === */
.form-group {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
}

label {
    display: block;
    font-weight: 600;
    color: var(--text-color-secondary);
    font-size: 13px;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: color var(--transition-fast);
    margin-bottom: 6px;
    opacity: 0.8;
}

.form-group:hover label {
    color: var(--text-color-primary);
    opacity: 1;
}

input[type="file"],
input[type="text"],
input[type="number"],
select {
    width: 100%;
    padding: 14px 18px;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background-color: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    color: var(--text-color-primary);
    font-size: 15px;
    font-family: inherit;
    transition: all var(--transition-base);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.02);
}

input[type="file"] {
    padding: 0.5rem;
    cursor: pointer;
    background-color: var(--background-color);
}

input[type="file"]::file-selector-button {
    padding: 10px 18px;
    margin-right: var(--spacing-md);
    background: var(--primary-gradient);
    color: white;
    border: none;
    border-radius: var(--radius-md);
    cursor: pointer;
    font-weight: 600;
    font-size: 13px;
    text-transform: none;
    transition: all var(--transition-base);
    box-shadow: 0 2px 6px rgba(230, 0, 0, 0.2);
}

input[type="file"]::file-selector-button:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(230, 0, 0, 0.3);
}

input:hover:not(:focus):not(:disabled),
select:hover:not(:focus):not(:disabled) {
    border-color: var(--border-color);
}

input:focus,
select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: var(--shadow-focus);
    background-color: rgba(255, 255, 255, 0.95);
    transform: translateY(-1px);
}

input:disabled,
select:disabled {
    background-color: var(--background-color);
    color: var(--text-color-muted);
    cursor: not-allowed;
    opacity: 0.7;
    border-color: var(--border-color-light);
}

/* === Buttons === */
button {
    position: relative;
    padding: 14px 24px;
    color: white;
    border: none;
    border-radius: var(--radius-md);
    cursor: pointer;
    width: 100%;
    font-weight: 600;
    font-size: 15px;
    text-align: center;
    transition: all var(--transition-base);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    text-transform: none;
    letter-spacing: 0.02em;
    transform: translateY(0);
}

button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

button:hover::before {
    left: 100%;
}

button:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

button:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: var(--shadow-sm);
}

button:disabled {
    background: linear-gradient(135deg, var(--border-color) 0%, var(--border-color-light) 100%);
    color: var(--text-color-muted);
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
    opacity: 0.6;
}

/* Button variants */
button.btn-primary,
#generateButton {
    background: var(--primary-gradient);
    position: relative;
}

button.btn-primary:hover:not(:disabled),
#generateButton:hover:not(:disabled) {
    background: var(--primary-gradient);
    box-shadow: var(--shadow-lg), var(--shadow-glow);
}

button.btn-secondary,
#downloadPreviewButton,
#editLayoutButton {
    background: linear-gradient(135deg, var(--secondary-color) 0%, #2A3142 100%);
}

button.btn-secondary:hover:not(:disabled),
#downloadPreviewButton:hover:not(:disabled),
#editLayoutButton:hover:not(:disabled) {
    background: linear-gradient(135deg, var(--secondary-color-hover) 0%, #1A2030 100%);
    box-shadow: var(--shadow-lg);
}

#downloadAllButton {
    background: linear-gradient(135deg, var(--success-color) 0%, #00B074 100%);
    color: white;
}

#downloadAllButton:hover:not(:disabled) {
    background: linear-gradient(135deg, var(--success-color-hover) 0%, #009960 100%);
    box-shadow: var(--shadow-lg), 0 0 20px rgba(0, 214, 143, 0.3);
}

/* Add field buttons special styling */
#leftPanel .form-group button {
    font-size: 14px;
    padding: 12px 20px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(255, 255, 255, 0.85) 100%);
    color: var(--text-color-primary);
    border: 1px solid var(--border-color-light);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    font-weight: 500;
    text-transform: none;
    backdrop-filter: blur(10px);
    position: relative;
    overflow: hidden;
}

#leftPanel .form-group button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--primary-gradient);
    opacity: 0;
    transition: opacity var(--transition-base);
}

#leftPanel .form-group button:hover:not(:disabled) {
    border-color: var(--primary-color-light);
    background: linear-gradient(135deg, rgba(230, 0, 0, 0.05) 0%, rgba(230, 0, 0, 0.08) 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(230, 0, 0, 0.15);
}

#leftPanel .form-group button span {
    position: relative;
    z-index: 1;
}

/* Add icons to buttons */
#addNameField::before { content: '👤 '; }
#addDobField::before { content: '📅 '; }
#addIssueDateField::before { content: '📆 '; }
#addExpiryDateField::before { content: '⏰ '; }
#addCivilNoField::before { content: '🆔 '; }
#addPhotoField::before { content: '📸 '; }

/* Special styling for photo button */
#addPhotoField {
    background: linear-gradient(135deg, rgba(156, 42, 160, 0.05) 0%, rgba(156, 42, 160, 0.08) 100%);
    border-color: rgba(156, 42, 160, 0.2);
    color: var(--accent-purple);
}

#addPhotoField:hover:not(:disabled) {
    background: linear-gradient(135deg, rgba(156, 42, 160, 0.1) 0%, rgba(156, 42, 160, 0.15) 100%);
    border-color: var(--accent-purple);
    color: var(--accent-purple);
    box-shadow: 0 4px 12px rgba(156, 42, 160, 0.2);
}

/* === Separator === */
hr {
    border: 0;
    height: 1px;
    background: linear-gradient(to right, transparent, var(--border-color), transparent);
    margin: 0;
    opacity: 0.5;
}

/* === Progress Indicator === */
#progressWrapper {
    width: 100%;
    animation: fadeIn var(--transition-base) ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

#generationProgress {
    width: 100%;
    height: 6px;
    border-radius: var(--radius-full);
    overflow: hidden;
    background-color: rgba(0, 0, 0, 0.05);
    -webkit-appearance: none;
    appearance: none;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

#generationProgress::-webkit-progress-bar {
    background-color: rgba(0, 0, 0, 0.05);
    border-radius: var(--radius-full);
}

#generationProgress::-webkit-progress-value {
    background: var(--primary-gradient);
    border-radius: var(--radius-full);
    transition: width var(--transition-base) ease-out;
    position: relative;
    overflow: hidden;
}

#generationProgress::-webkit-progress-value::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: shimmer 2s infinite;
}

#generationProgress::-moz-progress-bar {
    background: var(--primary-gradient);
    border-radius: var(--radius-full);
    transition: width var(--transition-base) ease-out;
}

@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}


#progressText {
    text-align: center;
    font-size: 14px;
    margin-top: var(--spacing-xs);
    color: var(--text-color-primary);
    font-weight: 700;
}

/* === Field Layer & Draggable Fields === */
#fieldLayer {
    position: absolute;
    pointer-events: none;
    z-index: 10;
}

.field {
    position: absolute;
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(12px) saturate(150%);
    border: 1px solid rgba(230, 0, 0, 0.3);
    padding: 2px;
    cursor: move;
    font-size: 16px; /* Match CONFIG.FIELDS.DEFAULT_FONT_SIZE */
    font-family: Arial; /* Match CONFIG.FIELDS.DEFAULT_FONT_FAMILY exactly */
    pointer-events: auto;
    color: black; /* Match canvas text color */
    font-weight: normal; /* Match canvas text weight */
    user-select: none;
    border-radius: var(--radius-sm);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.04);
    transition: all var(--transition-base);
    animation: fieldAppear var(--transition-bounce) ease-out;
    z-index: 20;
}

/* Disable transitions during drag for optimal performance */
.field.dragging {
    transition: none !important;
}

@keyframes fieldAppear {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Subtle styling for generated ID fields - removed for consistency */

.field:not([data-type="photo"]) {
    white-space: nowrap;
    word-break: normal;
    min-height: 32px;
    display: flex;
    align-items: flex-start; /* Match canvas textBaseline: 'top' */
    line-height: 1; /* Prevent extra line spacing that differs from canvas */
}

.field[data-type="photo"] {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(156, 42, 160, 0.05) 100%);
    backdrop-filter: blur(12px) saturate(150%);
    border: 1px solid rgba(156, 42, 160, 0.4);
    color: var(--accent-purple);
    min-width: 60px;
    min-height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 12px;
    font-weight: 600;
    box-shadow: 0 2px 8px rgba(156, 42, 160, 0.1);
}

.field:hover {
    border-color: var(--primary-color);
    box-shadow: 0 4px 16px rgba(230, 0, 0, 0.15), var(--shadow-md);
    background: rgba(255, 255, 255, 0.95);
    transform: translateY(-2px);
}

.field[data-type="photo"]:hover {
    border-color: var(--accent-purple);
    box-shadow: 0 4px 16px rgba(156, 42, 160, 0.2), var(--shadow-md);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(156, 42, 160, 0.08) 100%);
    transform: translateY(-2px);
}

.field.focused {
    border-color: var(--primary-color);
    border-width: 2px;
    box-shadow: var(--shadow-focus), 0 8px 24px rgba(230, 0, 0, 0.2);
    z-index: 100;
    background: rgba(255, 255, 255, 0.98);
    transform: translateY(-3px) scale(1.02);
}

.field[data-type="photo"].focused {
    border-color: var(--accent-purple);
    border-width: 2px;
    box-shadow: 0 0 0 3px var(--accent-purple-light), 0 8px 24px rgba(156, 42, 160, 0.25);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.98) 0%, rgba(156, 42, 160, 0.1) 100%);
    transform: translateY(-3px) scale(1.02);
}

.field .resize-handle {
    position: absolute;
    width: 16px;
    height: 16px;
    background-color: var(--primary-color);
    border: 2px solid white;
    border-radius: var(--radius-sm);
    right: -8px;
    bottom: -8px;
    cursor: nwse-resize;
    display: none;
    z-index: 10;
    transition: all var(--transition-fast);
    box-shadow: var(--shadow-sm);
}

.field[data-type="photo"] .resize-handle {
    background-color: var(--accent-purple);
}

.field:hover .resize-handle,
.field.focused .resize-handle {
    display: block;
}

.resize-handle:hover {
    transform: scale(1.2);
    box-shadow: var(--shadow-md);
}


/* === Generated mode styles === */
.field.generated-mode[data-type="photo"] {
    background: rgba(255, 255, 255, 0.1);
    border: 2px dashed var(--accent-purple);
    color: transparent;
}

.field.generated-mode[data-type="photo"]:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: var(--accent-purple);
}

.field.generated-mode[data-type="photo"].focused {
    background: rgba(255, 255, 255, 0.3);
    border-color: var(--accent-purple);
    box-shadow: 0 0 0 3px var(--accent-purple-light);
}

/* === Responsive adjustments === */
@media (max-width: 1400px) {
    #leftPanel, #rightPanel {
        flex: 0 0 280px;
        padding: var(--spacing-lg);
    }
}

@media (max-width: 1200px) {
    body {
        font-size: 14px;
    }
    
    #leftPanel, #rightPanel {
        flex: 0 0 260px;
    }
    
    #canvasWrapper {
        padding: var(--spacing-lg);
    }
}

/* === Loading states === */
.loading {
    position: relative;
    pointer-events: none;
    opacity: 0.7;
}

.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 24px;
    height: 24px;
    margin: -12px 0 0 -12px;
    border: 3px solid transparent;
    border-top-color: var(--primary-color);
    border-right-color: var(--primary-color);
    border-radius: 50%;
    animation: spin 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg) scale(1); }
    50% { transform: rotate(180deg) scale(1.1); }
    100% { transform: rotate(360deg) scale(1); }
}

/* === Tooltips (for better UX) === */
[title] {
    position: relative;
}

[title]:hover::after {
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    padding: var(--spacing-xs) var(--spacing-sm);
    background-color: var(--text-color-primary);
    color: white;
    font-size: 12px;
    font-weight: 700;
    border-radius: var(--radius-sm);
    white-space: nowrap;
    z-index: 1000;
    pointer-events: none;
    opacity: 1;
}

/* === Focus visible for accessibility === */
*:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

button:focus-visible {
    outline-offset: 4px;
}

/* === Smooth transitions for dynamic content === */
button,
input,
select,
#idCanvas {
    will-change: transform;
}

/* === Generated mode field styling === */
.field.generated-mode {
    background: rgba(255, 255, 255, 0.85);
    border: 1px solid var(--primary-color-light);
    box-shadow: var(--shadow-sm);
}

.field.generated-mode:hover {
    background: rgba(255, 255, 255, 0.9);
    border-color: var(--primary-color);
    box-shadow: var(--shadow-md);
}

.field.generated-mode.focused {
    background: rgba(255, 255, 255, 0.95);
    border-color: var(--primary-color);
    border-width: 2px;
    box-shadow: var(--shadow-focus);
}

.field[data-type="photo"].generated-mode {
    background: rgba(255, 255, 255, 0.85);
    border-color: var(--accent-purple);
    box-shadow: var(--shadow-sm);
}

.field[data-type="photo"].generated-mode:hover {
    background: rgba(255, 255, 255, 0.9);
    border-color: var(--accent-purple);
    box-shadow: var(--shadow-md);
}

.field[data-type="photo"].generated-mode.focused {
    background: rgba(255, 255, 255, 0.95);
    border-color: var(--accent-purple);
    border-width: 2px;
    box-shadow: 0 0 0 3px var(--accent-purple-light);
}

/* === Field Edge Indicators === */
.field-edge {
    position: absolute;
    cursor: pointer;
    z-index: 5;
    pointer-events: all;
}

.field-edge.edge-left,
.field-edge.edge-right {
    top: 0;
    bottom: 0;
    width: 8px;
}

.field-edge.edge-top,
.field-edge.edge-bottom {
    left: 8px;
    right: 8px;
    height: 8px;
}

.field-edge.edge-left {
    left: 0;
}

.field-edge.edge-right {
    right: 0;
}

.field-edge.edge-top {
    top: 0;
}

.field-edge.edge-bottom {
    bottom: 0;
}

/* Active border styling based on label edge */
.field.label-edge-left {
    border-left: 3px solid var(--primary-color);
    text-align: left;
    justify-content: flex-start;
    padding: 2px; /* Standard padding matching canvas */
}

.field.label-edge-right {
    border-right: 3px solid var(--primary-color);
    text-align: right;
    justify-content: flex-end;
    padding: 2px; /* Standard padding matching canvas */
}

.field.label-edge-top {
    border-top: 3px solid var(--primary-color);
    text-align: center;
    justify-content: center;
    align-items: flex-start;
    padding-top: 12px; /* Extra padding for top label - matches canvas paddingY * 6 */
    padding-left: 2px;
    padding-right: 2px;
    padding-bottom: 2px;
}

.field.label-edge-bottom {
    border-bottom: 3px solid var(--primary-color);
    text-align: center;
    justify-content: center;
    align-items: flex-end;
    padding-bottom: 12px; /* Extra padding for bottom label - matches canvas paddingY * 6 */
    padding-left: 2px;
    padding-right: 2px;
    padding-top: 2px;
}

/* Hover effect on edges */
.field:not(.label-edge-left) .field-edge.edge-left:hover ~ *,
.field:not(.label-edge-left):has(.field-edge.edge-left:hover) {
    border-left-color: var(--primary-color);
    border-left-width: 3px;
}

.field:not(.label-edge-right) .field-edge.edge-right:hover ~ *,
.field:not(.label-edge-right):has(.field-edge.edge-right:hover) {
    border-right-color: var(--primary-color);
    border-right-width: 3px;
}

.field:not(.label-edge-top) .field-edge.edge-top:hover ~ *,
.field:not(.label-edge-top):has(.field-edge.edge-top:hover) {
    border-top-color: var(--primary-color);
    border-top-width: 3px;
}

.field:not(.label-edge-bottom) .field-edge.edge-bottom:hover ~ *,
.field:not(.label-edge-bottom):has(.field-edge.edge-bottom:hover) {
    border-bottom-color: var(--primary-color);
    border-bottom-width: 3px;
}

/* Visual feedback when hovering edges */
.field .field-edge:hover::before {
    content: '';
    position: absolute;
    opacity: 0.3;
    pointer-events: none;
}

.field .field-edge.edge-left:hover::before,
.field .field-edge.edge-right:hover::before {
    top: 0;
    bottom: 0;
    width: 100%;
}

.field .field-edge.edge-top:hover::before,
.field .field-edge.edge-bottom:hover::before {
    left: 0;
    right: 0;
    height: 100%;
}

.field .field-edge.edge-left:hover::before {
    background: var(--primary-color-light);
}

.field .field-edge.edge-right:hover::before {
    background: var(--primary-color-light);
}

.field .field-edge.edge-top:hover::before {
    background: var(--primary-color-light);
}

.field .field-edge.edge-bottom:hover::before {
    background: var(--primary-color-light);
}

/* Hide edges on photo fields and when not focused */
.field[data-type="photo"] .field-edge,
.field:not(.focused) .field-edge {
    display: none;
}

.field.focused .field-edge {
    display: block;
}

/* Animate border changes */
.field {
    transition: border-color var(--transition-fast), 
                border-width var(--transition-fast),
                box-shadow var(--transition-fast),
                background var(--transition-fast),
                transform var(--transition-fast);
}

/* === Range Slider for Text Boldness === */
input[type="range"] {
    width: 100%;
    height: 4px;
    background: linear-gradient(to right, var(--border-color-light) 0%, var(--border-color-light) var(--value, 50%), var(--border-color-light) var(--value, 50%), var(--border-color-light) 100%);
    border-radius: var(--radius-full);
    outline: none;
    -webkit-appearance: none;
    appearance: none;
    margin: var(--spacing-md) 0;
    cursor: pointer;
    transition: all var(--transition-base);
    position: relative;
}

input[type="range"]:hover {
    background: linear-gradient(to right, var(--primary-color-light) 0%, var(--primary-color-light) var(--value, 50%), var(--border-color) var(--value, 50%), var(--border-color) 100%);
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    background: var(--primary-gradient);
    cursor: pointer;
    border-radius: 50%;
    transition: all var(--transition-base);
    box-shadow: 0 2px 8px rgba(230, 0, 0, 0.3), var(--shadow-sm);
    border: 3px solid white;
}

input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: var(--primary-gradient);
    cursor: pointer;
    border-radius: 50%;
    transition: all var(--transition-base);
    border: 3px solid white;
    box-shadow: 0 2px 8px rgba(230, 0, 0, 0.3), var(--shadow-sm);
}

input[type="range"]:hover::-webkit-slider-thumb {
    transform: scale(1.15);
    box-shadow: 0 4px 12px rgba(230, 0, 0, 0.4), var(--shadow-glow);
}

input[type="range"]:hover::-moz-range-thumb {
    transform: scale(1.15);
    box-shadow: 0 4px 12px rgba(230, 0, 0, 0.4), var(--shadow-glow);
}

input[type="range"]:active::-webkit-slider-thumb {
    transform: scale(1.25);
}

input[type="range"]:active::-moz-range-thumb {
    transform: scale(1.25);
}

#boldnessControl h4 {
    color: var(--text-color-primary);
    font-size: 16px;
    font-weight: 700;
    margin-bottom: var(--spacing-sm);
}

#boldnessValue {
    font-weight: 700;
    color: var(--primary-color);
    font-family: var(--font-family-mono);
    font-size: 16px;
}